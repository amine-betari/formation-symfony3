imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AmineBundle/Resources/config/services.yml" }
    - { resource: "@AmineBundle/Resources/config/config.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    brochures_directory: '%kernel.root_dir%/../web/uploads/brochures'
    email: amine.betari@gmail.com

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'bootstrap_3_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            string_functions:
                MATCH_AGAINST: AmineBundle\Extensions\Doctrine\MatchAgainst

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Stof\DoctrineExtensionsBundle configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true		
# FOS\UserBundle configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: OC\UserBundle\Entity\User
    registration: 
        form:
            type: OC\UserBundle\Form\RegistrationType
    from_email:
        address: amine.betari@gmail.com
        sender_name: Formation Symfony3	
# Assetic Configuration
assetic:
    debug:          '%kernel.debug%'	
    use_controller: '%kernel.debug%'
    bundles:
        - OCPlatformBundle
        - AmineBundle
        - EasyAdminBundle
        - IvoryCKEditorBundle
    filters:
        cssrewrite: ~
        jsqueeze: ~
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'
# config datables bundles
waldo_datatable:
    all: ~
    js:
        pageLength : "7"
        lengthMenu: [[5,10 25, 50, -1], [5,10, 25, 50, 'All']]
        dom: '<"clearfix"lf>rtip'
        jQueryUI: "false"

easy_admin:
#    site_admin: 'OC Admin'
    design: 
        brand_color: '#1ABC9C'
        rtl: false
    entities:
        Page:
            class: AmineBundle\Entity\Page
            form:
                fields:
                    - 'name'
                    - { property: 'description', type: 'ckeditor' }
                    - 'isMenu'
                    - 'rubrique'
        Rubrique:
            class: AmineBundle\Entity\Rubrique
            form:
                fields:
                    - 'name'
                    -  { property: 'description', type: 'ckeditor' }
                    #-  'pages' 
        Skill:
            class: OC\PlatformBundle\Entity\Skill
            label: 'Comp√©tences'
            list:
                title: 'Most recent Skills'
                max_results: 15
                fields: ['id', 'Name', 'Phone']
            show: 
                fields: ['Name']
        Category:
            class: OC\PlatformBundle\Entity\Category
        User:
            class: OC\UserBundle\Entity\User
            form:
                fields:
                    - username
                    - email
                    - roles
                    - enabled
                    - lastLogin
                    # if administrators are allowed to edit users passwords and roles, add this
#                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
        Advert:
            class: OC\PlatformBundle\Entity\Advert
            list:
                fields:
                    - 'id'
                    - 'categories'
                    - 'title'
                    - 'content'
                    - { property: 'date', format: 'd/m/Y'}
                    - { property: 'published', type: 'boolean' }
#                    - { property: 'image', type: 'image' }
                    - 'categories'
                    - 'applications'
            edit:
 #               controller: OC\PlatformBundle\Controller\AdvertController      
